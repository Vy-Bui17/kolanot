/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.kolanot.service.model.impl;

import com.kolanot.service.model.KolanotInvoice;
import com.kolanot.service.model.KolanotInvoiceModel;
import com.kolanot.service.model.KolanotInvoiceSoap;

import com.liferay.expando.kernel.model.ExpandoBridge;
import com.liferay.expando.kernel.util.ExpandoBridgeFactoryUtil;
import com.liferay.exportimport.kernel.lar.StagedModelType;
import com.liferay.petra.string.StringBundler;
import com.liferay.portal.kernel.bean.AutoEscapeBeanHandler;
import com.liferay.portal.kernel.json.JSON;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.ModelWrapper;
import com.liferay.portal.kernel.model.impl.BaseModelImpl;
import com.liferay.portal.kernel.service.ServiceContext;
import com.liferay.portal.kernel.util.DateUtil;
import com.liferay.portal.kernel.util.GetterUtil;
import com.liferay.portal.kernel.util.PortalUtil;
import com.liferay.portal.kernel.util.ProxyUtil;

import java.io.Serializable;

import java.lang.reflect.Constructor;
import java.lang.reflect.InvocationHandler;

import java.math.BigDecimal;

import java.sql.Types;

import java.util.ArrayList;
import java.util.Collections;
import java.util.Date;
import java.util.HashMap;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import java.util.function.BiConsumer;
import java.util.function.Function;

/**
 * The base model implementation for the KolanotInvoice service. Represents a row in the &quot;kolanot_KolanotInvoice&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This implementation and its corresponding interface <code>KolanotInvoiceModel</code> exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link KolanotInvoiceImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see KolanotInvoiceImpl
 * @generated
 */
@JSON(strict = true)
public class KolanotInvoiceModelImpl
	extends BaseModelImpl<KolanotInvoice> implements KolanotInvoiceModel {

	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this class directly. All methods that expect a kolanot invoice model instance should use the <code>KolanotInvoice</code> interface instead.
	 */
	public static final String TABLE_NAME = "kolanot_KolanotInvoice";

	public static final Object[][] TABLE_COLUMNS = {
		{"uuid_", Types.VARCHAR}, {"externalReferenceCode", Types.VARCHAR},
		{"invoiceId", Types.BIGINT}, {"groupId", Types.BIGINT},
		{"companyId", Types.BIGINT}, {"createdByAccountId", Types.BIGINT},
		{"accountExternalReferenceCode", Types.VARCHAR},
		{"referenceNo", Types.VARCHAR}, {"createdBy", Types.VARCHAR},
		{"createDate", Types.TIMESTAMP}, {"modifiedDate", Types.TIMESTAMP},
		{"documentNumber", Types.VARCHAR}, {"documentStatus", Types.VARCHAR},
		{"documentDate", Types.TIMESTAMP}, {"dueDate", Types.TIMESTAMP},
		{"carrier", Types.VARCHAR}, {"trackingNumber", Types.VARCHAR},
		{"subTotal", Types.DECIMAL}, {"freightAmount", Types.DECIMAL},
		{"gst", Types.DECIMAL}, {"invoiceTotal", Types.DECIMAL},
		{"balanceDue", Types.DECIMAL}, {"trackingURL", Types.VARCHAR},
		{"status", Types.INTEGER}, {"paidSum", Types.DECIMAL},
		{"fileEntryId", Types.BIGINT}, {"billingAddressId", Types.BIGINT},
		{"shippingAddressId", Types.BIGINT}
	};

	public static final Map<String, Integer> TABLE_COLUMNS_MAP =
		new HashMap<String, Integer>();

	static {
		TABLE_COLUMNS_MAP.put("uuid_", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("externalReferenceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("invoiceId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("groupId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("companyId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("createdByAccountId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("accountExternalReferenceCode", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("referenceNo", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createdBy", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("createDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("modifiedDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("documentNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("documentStatus", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("documentDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("dueDate", Types.TIMESTAMP);
		TABLE_COLUMNS_MAP.put("carrier", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("trackingNumber", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("subTotal", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("freightAmount", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("gst", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("invoiceTotal", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("balanceDue", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("trackingURL", Types.VARCHAR);
		TABLE_COLUMNS_MAP.put("status", Types.INTEGER);
		TABLE_COLUMNS_MAP.put("paidSum", Types.DECIMAL);
		TABLE_COLUMNS_MAP.put("fileEntryId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("billingAddressId", Types.BIGINT);
		TABLE_COLUMNS_MAP.put("shippingAddressId", Types.BIGINT);
	}

	public static final String TABLE_SQL_CREATE =
		"create table kolanot_KolanotInvoice (uuid_ VARCHAR(75) null,externalReferenceCode VARCHAR(75) null,invoiceId LONG not null primary key,groupId LONG,companyId LONG,createdByAccountId LONG,accountExternalReferenceCode VARCHAR(75) null,referenceNo VARCHAR(75) null,createdBy VARCHAR(75) null,createDate DATE null,modifiedDate DATE null,documentNumber VARCHAR(75) null,documentStatus VARCHAR(75) null,documentDate DATE null,dueDate DATE null,carrier VARCHAR(75) null,trackingNumber VARCHAR(75) null,subTotal DECIMAL(30, 16) null,freightAmount DECIMAL(30, 16) null,gst DECIMAL(30, 16) null,invoiceTotal DECIMAL(30, 16) null,balanceDue DECIMAL(30, 16) null,trackingURL VARCHAR(75) null,status INTEGER,paidSum DECIMAL(30, 16) null,fileEntryId LONG,billingAddressId LONG,shippingAddressId LONG)";

	public static final String TABLE_SQL_DROP =
		"drop table kolanot_KolanotInvoice";

	public static final String ORDER_BY_JPQL =
		" ORDER BY kolanotInvoice.createDate ASC";

	public static final String ORDER_BY_SQL =
		" ORDER BY kolanot_KolanotInvoice.createDate ASC";

	public static final String DATA_SOURCE = "liferayDataSource";

	public static final String SESSION_FACTORY = "liferaySessionFactory";

	public static final String TX_MANAGER = "liferayTransactionManager";

	public static final long ACCOUNTEXTERNALREFERENCECODE_COLUMN_BITMASK = 1L;

	public static final long COMPANYID_COLUMN_BITMASK = 2L;

	public static final long CREATEDBYACCOUNTID_COLUMN_BITMASK = 4L;

	public static final long EXTERNALREFERENCECODE_COLUMN_BITMASK = 8L;

	public static final long GROUPID_COLUMN_BITMASK = 16L;

	public static final long UUID_COLUMN_BITMASK = 32L;

	public static final long CREATEDATE_COLUMN_BITMASK = 64L;

	public static void setEntityCacheEnabled(boolean entityCacheEnabled) {
		_entityCacheEnabled = entityCacheEnabled;
	}

	public static void setFinderCacheEnabled(boolean finderCacheEnabled) {
		_finderCacheEnabled = finderCacheEnabled;
	}

	/**
	 * Converts the soap model instance into a normal model instance.
	 *
	 * @param soapModel the soap model instance to convert
	 * @return the normal model instance
	 */
	public static KolanotInvoice toModel(KolanotInvoiceSoap soapModel) {
		if (soapModel == null) {
			return null;
		}

		KolanotInvoice model = new KolanotInvoiceImpl();

		model.setUuid(soapModel.getUuid());
		model.setExternalReferenceCode(soapModel.getExternalReferenceCode());
		model.setInvoiceId(soapModel.getInvoiceId());
		model.setGroupId(soapModel.getGroupId());
		model.setCompanyId(soapModel.getCompanyId());
		model.setCreatedByAccountId(soapModel.getCreatedByAccountId());
		model.setAccountExternalReferenceCode(
			soapModel.getAccountExternalReferenceCode());
		model.setReferenceNo(soapModel.getReferenceNo());
		model.setCreatedBy(soapModel.getCreatedBy());
		model.setCreateDate(soapModel.getCreateDate());
		model.setModifiedDate(soapModel.getModifiedDate());
		model.setDocumentNumber(soapModel.getDocumentNumber());
		model.setDocumentStatus(soapModel.getDocumentStatus());
		model.setDocumentDate(soapModel.getDocumentDate());
		model.setDueDate(soapModel.getDueDate());
		model.setCarrier(soapModel.getCarrier());
		model.setTrackingNumber(soapModel.getTrackingNumber());
		model.setSubTotal(soapModel.getSubTotal());
		model.setFreightAmount(soapModel.getFreightAmount());
		model.setGst(soapModel.getGst());
		model.setInvoiceTotal(soapModel.getInvoiceTotal());
		model.setBalanceDue(soapModel.getBalanceDue());
		model.setTrackingURL(soapModel.getTrackingURL());
		model.setStatus(soapModel.getStatus());
		model.setPaidSum(soapModel.getPaidSum());
		model.setFileEntryId(soapModel.getFileEntryId());
		model.setBillingAddressId(soapModel.getBillingAddressId());
		model.setShippingAddressId(soapModel.getShippingAddressId());

		return model;
	}

	/**
	 * Converts the soap model instances into normal model instances.
	 *
	 * @param soapModels the soap model instances to convert
	 * @return the normal model instances
	 */
	public static List<KolanotInvoice> toModels(
		KolanotInvoiceSoap[] soapModels) {

		if (soapModels == null) {
			return null;
		}

		List<KolanotInvoice> models = new ArrayList<KolanotInvoice>(
			soapModels.length);

		for (KolanotInvoiceSoap soapModel : soapModels) {
			models.add(toModel(soapModel));
		}

		return models;
	}

	public KolanotInvoiceModelImpl() {
	}

	@Override
	public long getPrimaryKey() {
		return _invoiceId;
	}

	@Override
	public void setPrimaryKey(long primaryKey) {
		setInvoiceId(primaryKey);
	}

	@Override
	public Serializable getPrimaryKeyObj() {
		return _invoiceId;
	}

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj) {
		setPrimaryKey(((Long)primaryKeyObj).longValue());
	}

	@Override
	public Class<?> getModelClass() {
		return KolanotInvoice.class;
	}

	@Override
	public String getModelClassName() {
		return KolanotInvoice.class.getName();
	}

	@Override
	public Map<String, Object> getModelAttributes() {
		Map<String, Object> attributes = new HashMap<String, Object>();

		Map<String, Function<KolanotInvoice, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		for (Map.Entry<String, Function<KolanotInvoice, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<KolanotInvoice, Object> attributeGetterFunction =
				entry.getValue();

			attributes.put(
				attributeName,
				attributeGetterFunction.apply((KolanotInvoice)this));
		}

		attributes.put("entityCacheEnabled", isEntityCacheEnabled());
		attributes.put("finderCacheEnabled", isFinderCacheEnabled());

		return attributes;
	}

	@Override
	public void setModelAttributes(Map<String, Object> attributes) {
		Map<String, BiConsumer<KolanotInvoice, Object>>
			attributeSetterBiConsumers = getAttributeSetterBiConsumers();

		for (Map.Entry<String, Object> entry : attributes.entrySet()) {
			String attributeName = entry.getKey();

			BiConsumer<KolanotInvoice, Object> attributeSetterBiConsumer =
				attributeSetterBiConsumers.get(attributeName);

			if (attributeSetterBiConsumer != null) {
				attributeSetterBiConsumer.accept(
					(KolanotInvoice)this, entry.getValue());
			}
		}
	}

	public Map<String, Function<KolanotInvoice, Object>>
		getAttributeGetterFunctions() {

		return _attributeGetterFunctions;
	}

	public Map<String, BiConsumer<KolanotInvoice, Object>>
		getAttributeSetterBiConsumers() {

		return _attributeSetterBiConsumers;
	}

	private static Function<InvocationHandler, KolanotInvoice>
		_getProxyProviderFunction() {

		Class<?> proxyClass = ProxyUtil.getProxyClass(
			KolanotInvoice.class.getClassLoader(), KolanotInvoice.class,
			ModelWrapper.class);

		try {
			Constructor<KolanotInvoice> constructor =
				(Constructor<KolanotInvoice>)proxyClass.getConstructor(
					InvocationHandler.class);

			return invocationHandler -> {
				try {
					return constructor.newInstance(invocationHandler);
				}
				catch (ReflectiveOperationException
							reflectiveOperationException) {

					throw new InternalError(reflectiveOperationException);
				}
			};
		}
		catch (NoSuchMethodException noSuchMethodException) {
			throw new InternalError(noSuchMethodException);
		}
	}

	private static final Map<String, Function<KolanotInvoice, Object>>
		_attributeGetterFunctions;
	private static final Map<String, BiConsumer<KolanotInvoice, Object>>
		_attributeSetterBiConsumers;

	static {
		Map<String, Function<KolanotInvoice, Object>> attributeGetterFunctions =
			new LinkedHashMap<String, Function<KolanotInvoice, Object>>();
		Map<String, BiConsumer<KolanotInvoice, ?>> attributeSetterBiConsumers =
			new LinkedHashMap<String, BiConsumer<KolanotInvoice, ?>>();

		attributeGetterFunctions.put("uuid", KolanotInvoice::getUuid);
		attributeSetterBiConsumers.put(
			"uuid",
			(BiConsumer<KolanotInvoice, String>)KolanotInvoice::setUuid);
		attributeGetterFunctions.put(
			"externalReferenceCode", KolanotInvoice::getExternalReferenceCode);
		attributeSetterBiConsumers.put(
			"externalReferenceCode",
			(BiConsumer<KolanotInvoice, String>)
				KolanotInvoice::setExternalReferenceCode);
		attributeGetterFunctions.put("invoiceId", KolanotInvoice::getInvoiceId);
		attributeSetterBiConsumers.put(
			"invoiceId",
			(BiConsumer<KolanotInvoice, Long>)KolanotInvoice::setInvoiceId);
		attributeGetterFunctions.put("groupId", KolanotInvoice::getGroupId);
		attributeSetterBiConsumers.put(
			"groupId",
			(BiConsumer<KolanotInvoice, Long>)KolanotInvoice::setGroupId);
		attributeGetterFunctions.put("companyId", KolanotInvoice::getCompanyId);
		attributeSetterBiConsumers.put(
			"companyId",
			(BiConsumer<KolanotInvoice, Long>)KolanotInvoice::setCompanyId);
		attributeGetterFunctions.put(
			"createdByAccountId", KolanotInvoice::getCreatedByAccountId);
		attributeSetterBiConsumers.put(
			"createdByAccountId",
			(BiConsumer<KolanotInvoice, Long>)
				KolanotInvoice::setCreatedByAccountId);
		attributeGetterFunctions.put(
			"accountExternalReferenceCode",
			KolanotInvoice::getAccountExternalReferenceCode);
		attributeSetterBiConsumers.put(
			"accountExternalReferenceCode",
			(BiConsumer<KolanotInvoice, String>)
				KolanotInvoice::setAccountExternalReferenceCode);
		attributeGetterFunctions.put(
			"referenceNo", KolanotInvoice::getReferenceNo);
		attributeSetterBiConsumers.put(
			"referenceNo",
			(BiConsumer<KolanotInvoice, String>)KolanotInvoice::setReferenceNo);
		attributeGetterFunctions.put("createdBy", KolanotInvoice::getCreatedBy);
		attributeSetterBiConsumers.put(
			"createdBy",
			(BiConsumer<KolanotInvoice, String>)KolanotInvoice::setCreatedBy);
		attributeGetterFunctions.put(
			"createDate", KolanotInvoice::getCreateDate);
		attributeSetterBiConsumers.put(
			"createDate",
			(BiConsumer<KolanotInvoice, Date>)KolanotInvoice::setCreateDate);
		attributeGetterFunctions.put(
			"modifiedDate", KolanotInvoice::getModifiedDate);
		attributeSetterBiConsumers.put(
			"modifiedDate",
			(BiConsumer<KolanotInvoice, Date>)KolanotInvoice::setModifiedDate);
		attributeGetterFunctions.put(
			"documentNumber", KolanotInvoice::getDocumentNumber);
		attributeSetterBiConsumers.put(
			"documentNumber",
			(BiConsumer<KolanotInvoice, String>)
				KolanotInvoice::setDocumentNumber);
		attributeGetterFunctions.put(
			"documentStatus", KolanotInvoice::getDocumentStatus);
		attributeSetterBiConsumers.put(
			"documentStatus",
			(BiConsumer<KolanotInvoice, String>)
				KolanotInvoice::setDocumentStatus);
		attributeGetterFunctions.put(
			"documentDate", KolanotInvoice::getDocumentDate);
		attributeSetterBiConsumers.put(
			"documentDate",
			(BiConsumer<KolanotInvoice, Date>)KolanotInvoice::setDocumentDate);
		attributeGetterFunctions.put("dueDate", KolanotInvoice::getDueDate);
		attributeSetterBiConsumers.put(
			"dueDate",
			(BiConsumer<KolanotInvoice, Date>)KolanotInvoice::setDueDate);
		attributeGetterFunctions.put("carrier", KolanotInvoice::getCarrier);
		attributeSetterBiConsumers.put(
			"carrier",
			(BiConsumer<KolanotInvoice, String>)KolanotInvoice::setCarrier);
		attributeGetterFunctions.put(
			"trackingNumber", KolanotInvoice::getTrackingNumber);
		attributeSetterBiConsumers.put(
			"trackingNumber",
			(BiConsumer<KolanotInvoice, String>)
				KolanotInvoice::setTrackingNumber);
		attributeGetterFunctions.put("subTotal", KolanotInvoice::getSubTotal);
		attributeSetterBiConsumers.put(
			"subTotal",
			(BiConsumer<KolanotInvoice, BigDecimal>)
				KolanotInvoice::setSubTotal);
		attributeGetterFunctions.put(
			"freightAmount", KolanotInvoice::getFreightAmount);
		attributeSetterBiConsumers.put(
			"freightAmount",
			(BiConsumer<KolanotInvoice, BigDecimal>)
				KolanotInvoice::setFreightAmount);
		attributeGetterFunctions.put("gst", KolanotInvoice::getGst);
		attributeSetterBiConsumers.put(
			"gst",
			(BiConsumer<KolanotInvoice, BigDecimal>)KolanotInvoice::setGst);
		attributeGetterFunctions.put(
			"invoiceTotal", KolanotInvoice::getInvoiceTotal);
		attributeSetterBiConsumers.put(
			"invoiceTotal",
			(BiConsumer<KolanotInvoice, BigDecimal>)
				KolanotInvoice::setInvoiceTotal);
		attributeGetterFunctions.put(
			"balanceDue", KolanotInvoice::getBalanceDue);
		attributeSetterBiConsumers.put(
			"balanceDue",
			(BiConsumer<KolanotInvoice, BigDecimal>)
				KolanotInvoice::setBalanceDue);
		attributeGetterFunctions.put(
			"trackingURL", KolanotInvoice::getTrackingURL);
		attributeSetterBiConsumers.put(
			"trackingURL",
			(BiConsumer<KolanotInvoice, String>)KolanotInvoice::setTrackingURL);
		attributeGetterFunctions.put("status", KolanotInvoice::getStatus);
		attributeSetterBiConsumers.put(
			"status",
			(BiConsumer<KolanotInvoice, Integer>)KolanotInvoice::setStatus);
		attributeGetterFunctions.put("paidSum", KolanotInvoice::getPaidSum);
		attributeSetterBiConsumers.put(
			"paidSum",
			(BiConsumer<KolanotInvoice, BigDecimal>)KolanotInvoice::setPaidSum);
		attributeGetterFunctions.put(
			"fileEntryId", KolanotInvoice::getFileEntryId);
		attributeSetterBiConsumers.put(
			"fileEntryId",
			(BiConsumer<KolanotInvoice, Long>)KolanotInvoice::setFileEntryId);
		attributeGetterFunctions.put(
			"billingAddressId", KolanotInvoice::getBillingAddressId);
		attributeSetterBiConsumers.put(
			"billingAddressId",
			(BiConsumer<KolanotInvoice, Long>)
				KolanotInvoice::setBillingAddressId);
		attributeGetterFunctions.put(
			"shippingAddressId", KolanotInvoice::getShippingAddressId);
		attributeSetterBiConsumers.put(
			"shippingAddressId",
			(BiConsumer<KolanotInvoice, Long>)
				KolanotInvoice::setShippingAddressId);

		_attributeGetterFunctions = Collections.unmodifiableMap(
			attributeGetterFunctions);
		_attributeSetterBiConsumers = Collections.unmodifiableMap(
			(Map)attributeSetterBiConsumers);
	}

	@JSON
	@Override
	public String getUuid() {
		if (_uuid == null) {
			return "";
		}
		else {
			return _uuid;
		}
	}

	@Override
	public void setUuid(String uuid) {
		_columnBitmask |= UUID_COLUMN_BITMASK;

		if (_originalUuid == null) {
			_originalUuid = _uuid;
		}

		_uuid = uuid;
	}

	public String getOriginalUuid() {
		return GetterUtil.getString(_originalUuid);
	}

	@JSON
	@Override
	public String getExternalReferenceCode() {
		if (_externalReferenceCode == null) {
			return "";
		}
		else {
			return _externalReferenceCode;
		}
	}

	@Override
	public void setExternalReferenceCode(String externalReferenceCode) {
		_columnBitmask |= EXTERNALREFERENCECODE_COLUMN_BITMASK;

		if (_originalExternalReferenceCode == null) {
			_originalExternalReferenceCode = _externalReferenceCode;
		}

		_externalReferenceCode = externalReferenceCode;
	}

	public String getOriginalExternalReferenceCode() {
		return GetterUtil.getString(_originalExternalReferenceCode);
	}

	@JSON
	@Override
	public long getInvoiceId() {
		return _invoiceId;
	}

	@Override
	public void setInvoiceId(long invoiceId) {
		_invoiceId = invoiceId;
	}

	@JSON
	@Override
	public long getGroupId() {
		return _groupId;
	}

	@Override
	public void setGroupId(long groupId) {
		_columnBitmask |= GROUPID_COLUMN_BITMASK;

		if (!_setOriginalGroupId) {
			_setOriginalGroupId = true;

			_originalGroupId = _groupId;
		}

		_groupId = groupId;
	}

	public long getOriginalGroupId() {
		return _originalGroupId;
	}

	@JSON
	@Override
	public long getCompanyId() {
		return _companyId;
	}

	@Override
	public void setCompanyId(long companyId) {
		_columnBitmask |= COMPANYID_COLUMN_BITMASK;

		if (!_setOriginalCompanyId) {
			_setOriginalCompanyId = true;

			_originalCompanyId = _companyId;
		}

		_companyId = companyId;
	}

	public long getOriginalCompanyId() {
		return _originalCompanyId;
	}

	@JSON
	@Override
	public long getCreatedByAccountId() {
		return _createdByAccountId;
	}

	@Override
	public void setCreatedByAccountId(long createdByAccountId) {
		_columnBitmask |= CREATEDBYACCOUNTID_COLUMN_BITMASK;

		if (!_setOriginalCreatedByAccountId) {
			_setOriginalCreatedByAccountId = true;

			_originalCreatedByAccountId = _createdByAccountId;
		}

		_createdByAccountId = createdByAccountId;
	}

	public long getOriginalCreatedByAccountId() {
		return _originalCreatedByAccountId;
	}

	@JSON
	@Override
	public String getAccountExternalReferenceCode() {
		if (_accountExternalReferenceCode == null) {
			return "";
		}
		else {
			return _accountExternalReferenceCode;
		}
	}

	@Override
	public void setAccountExternalReferenceCode(
		String accountExternalReferenceCode) {

		_columnBitmask |= ACCOUNTEXTERNALREFERENCECODE_COLUMN_BITMASK;

		if (_originalAccountExternalReferenceCode == null) {
			_originalAccountExternalReferenceCode =
				_accountExternalReferenceCode;
		}

		_accountExternalReferenceCode = accountExternalReferenceCode;
	}

	public String getOriginalAccountExternalReferenceCode() {
		return GetterUtil.getString(_originalAccountExternalReferenceCode);
	}

	@JSON
	@Override
	public String getReferenceNo() {
		if (_referenceNo == null) {
			return "";
		}
		else {
			return _referenceNo;
		}
	}

	@Override
	public void setReferenceNo(String referenceNo) {
		_referenceNo = referenceNo;
	}

	@JSON
	@Override
	public String getCreatedBy() {
		if (_createdBy == null) {
			return "";
		}
		else {
			return _createdBy;
		}
	}

	@Override
	public void setCreatedBy(String createdBy) {
		_createdBy = createdBy;
	}

	@JSON
	@Override
	public Date getCreateDate() {
		return _createDate;
	}

	@Override
	public void setCreateDate(Date createDate) {
		_columnBitmask = -1L;

		_createDate = createDate;
	}

	@JSON
	@Override
	public Date getModifiedDate() {
		return _modifiedDate;
	}

	public boolean hasSetModifiedDate() {
		return _setModifiedDate;
	}

	@Override
	public void setModifiedDate(Date modifiedDate) {
		_setModifiedDate = true;

		_modifiedDate = modifiedDate;
	}

	@JSON
	@Override
	public String getDocumentNumber() {
		if (_documentNumber == null) {
			return "";
		}
		else {
			return _documentNumber;
		}
	}

	@Override
	public void setDocumentNumber(String documentNumber) {
		_documentNumber = documentNumber;
	}

	@JSON
	@Override
	public String getDocumentStatus() {
		if (_documentStatus == null) {
			return "";
		}
		else {
			return _documentStatus;
		}
	}

	@Override
	public void setDocumentStatus(String documentStatus) {
		_documentStatus = documentStatus;
	}

	@JSON
	@Override
	public Date getDocumentDate() {
		return _documentDate;
	}

	@Override
	public void setDocumentDate(Date documentDate) {
		_documentDate = documentDate;
	}

	@JSON
	@Override
	public Date getDueDate() {
		return _dueDate;
	}

	@Override
	public void setDueDate(Date dueDate) {
		_dueDate = dueDate;
	}

	@JSON
	@Override
	public String getCarrier() {
		if (_carrier == null) {
			return "";
		}
		else {
			return _carrier;
		}
	}

	@Override
	public void setCarrier(String carrier) {
		_carrier = carrier;
	}

	@JSON
	@Override
	public String getTrackingNumber() {
		if (_trackingNumber == null) {
			return "";
		}
		else {
			return _trackingNumber;
		}
	}

	@Override
	public void setTrackingNumber(String trackingNumber) {
		_trackingNumber = trackingNumber;
	}

	@JSON
	@Override
	public BigDecimal getSubTotal() {
		return _subTotal;
	}

	@Override
	public void setSubTotal(BigDecimal subTotal) {
		_subTotal = subTotal;
	}

	@JSON
	@Override
	public BigDecimal getFreightAmount() {
		return _freightAmount;
	}

	@Override
	public void setFreightAmount(BigDecimal freightAmount) {
		_freightAmount = freightAmount;
	}

	@JSON
	@Override
	public BigDecimal getGst() {
		return _gst;
	}

	@Override
	public void setGst(BigDecimal gst) {
		_gst = gst;
	}

	@JSON
	@Override
	public BigDecimal getInvoiceTotal() {
		return _invoiceTotal;
	}

	@Override
	public void setInvoiceTotal(BigDecimal invoiceTotal) {
		_invoiceTotal = invoiceTotal;
	}

	@JSON
	@Override
	public BigDecimal getBalanceDue() {
		return _balanceDue;
	}

	@Override
	public void setBalanceDue(BigDecimal balanceDue) {
		_balanceDue = balanceDue;
	}

	@JSON
	@Override
	public String getTrackingURL() {
		if (_trackingURL == null) {
			return "";
		}
		else {
			return _trackingURL;
		}
	}

	@Override
	public void setTrackingURL(String trackingURL) {
		_trackingURL = trackingURL;
	}

	@JSON
	@Override
	public int getStatus() {
		return _status;
	}

	@Override
	public void setStatus(int status) {
		_status = status;
	}

	@JSON
	@Override
	public BigDecimal getPaidSum() {
		return _paidSum;
	}

	@Override
	public void setPaidSum(BigDecimal paidSum) {
		_paidSum = paidSum;
	}

	@JSON
	@Override
	public long getFileEntryId() {
		return _fileEntryId;
	}

	@Override
	public void setFileEntryId(long fileEntryId) {
		_fileEntryId = fileEntryId;
	}

	@JSON
	@Override
	public long getBillingAddressId() {
		return _billingAddressId;
	}

	@Override
	public void setBillingAddressId(long billingAddressId) {
		_billingAddressId = billingAddressId;
	}

	@JSON
	@Override
	public long getShippingAddressId() {
		return _shippingAddressId;
	}

	@Override
	public void setShippingAddressId(long shippingAddressId) {
		_shippingAddressId = shippingAddressId;
	}

	@Override
	public StagedModelType getStagedModelType() {
		return new StagedModelType(
			PortalUtil.getClassNameId(KolanotInvoice.class.getName()));
	}

	public long getColumnBitmask() {
		return _columnBitmask;
	}

	@Override
	public ExpandoBridge getExpandoBridge() {
		return ExpandoBridgeFactoryUtil.getExpandoBridge(
			getCompanyId(), KolanotInvoice.class.getName(), getPrimaryKey());
	}

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext) {
		ExpandoBridge expandoBridge = getExpandoBridge();

		expandoBridge.setAttributes(serviceContext);
	}

	@Override
	public KolanotInvoice toEscapedModel() {
		if (_escapedModel == null) {
			Function<InvocationHandler, KolanotInvoice>
				escapedModelProxyProviderFunction =
					EscapedModelProxyProviderFunctionHolder.
						_escapedModelProxyProviderFunction;

			_escapedModel = escapedModelProxyProviderFunction.apply(
				new AutoEscapeBeanHandler(this));
		}

		return _escapedModel;
	}

	@Override
	public Object clone() {
		KolanotInvoiceImpl kolanotInvoiceImpl = new KolanotInvoiceImpl();

		kolanotInvoiceImpl.setUuid(getUuid());
		kolanotInvoiceImpl.setExternalReferenceCode(getExternalReferenceCode());
		kolanotInvoiceImpl.setInvoiceId(getInvoiceId());
		kolanotInvoiceImpl.setGroupId(getGroupId());
		kolanotInvoiceImpl.setCompanyId(getCompanyId());
		kolanotInvoiceImpl.setCreatedByAccountId(getCreatedByAccountId());
		kolanotInvoiceImpl.setAccountExternalReferenceCode(
			getAccountExternalReferenceCode());
		kolanotInvoiceImpl.setReferenceNo(getReferenceNo());
		kolanotInvoiceImpl.setCreatedBy(getCreatedBy());
		kolanotInvoiceImpl.setCreateDate(getCreateDate());
		kolanotInvoiceImpl.setModifiedDate(getModifiedDate());
		kolanotInvoiceImpl.setDocumentNumber(getDocumentNumber());
		kolanotInvoiceImpl.setDocumentStatus(getDocumentStatus());
		kolanotInvoiceImpl.setDocumentDate(getDocumentDate());
		kolanotInvoiceImpl.setDueDate(getDueDate());
		kolanotInvoiceImpl.setCarrier(getCarrier());
		kolanotInvoiceImpl.setTrackingNumber(getTrackingNumber());
		kolanotInvoiceImpl.setSubTotal(getSubTotal());
		kolanotInvoiceImpl.setFreightAmount(getFreightAmount());
		kolanotInvoiceImpl.setGst(getGst());
		kolanotInvoiceImpl.setInvoiceTotal(getInvoiceTotal());
		kolanotInvoiceImpl.setBalanceDue(getBalanceDue());
		kolanotInvoiceImpl.setTrackingURL(getTrackingURL());
		kolanotInvoiceImpl.setStatus(getStatus());
		kolanotInvoiceImpl.setPaidSum(getPaidSum());
		kolanotInvoiceImpl.setFileEntryId(getFileEntryId());
		kolanotInvoiceImpl.setBillingAddressId(getBillingAddressId());
		kolanotInvoiceImpl.setShippingAddressId(getShippingAddressId());

		kolanotInvoiceImpl.resetOriginalValues();

		return kolanotInvoiceImpl;
	}

	@Override
	public int compareTo(KolanotInvoice kolanotInvoice) {
		int value = 0;

		value = DateUtil.compareTo(
			getCreateDate(), kolanotInvoice.getCreateDate());

		if (value != 0) {
			return value;
		}

		return 0;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj) {
			return true;
		}

		if (!(obj instanceof KolanotInvoice)) {
			return false;
		}

		KolanotInvoice kolanotInvoice = (KolanotInvoice)obj;

		long primaryKey = kolanotInvoice.getPrimaryKey();

		if (getPrimaryKey() == primaryKey) {
			return true;
		}
		else {
			return false;
		}
	}

	@Override
	public int hashCode() {
		return (int)getPrimaryKey();
	}

	@Override
	public boolean isEntityCacheEnabled() {
		return _entityCacheEnabled;
	}

	@Override
	public boolean isFinderCacheEnabled() {
		return _finderCacheEnabled;
	}

	@Override
	public void resetOriginalValues() {
		KolanotInvoiceModelImpl kolanotInvoiceModelImpl = this;

		kolanotInvoiceModelImpl._originalUuid = kolanotInvoiceModelImpl._uuid;

		kolanotInvoiceModelImpl._originalExternalReferenceCode =
			kolanotInvoiceModelImpl._externalReferenceCode;

		kolanotInvoiceModelImpl._originalGroupId =
			kolanotInvoiceModelImpl._groupId;

		kolanotInvoiceModelImpl._setOriginalGroupId = false;

		kolanotInvoiceModelImpl._originalCompanyId =
			kolanotInvoiceModelImpl._companyId;

		kolanotInvoiceModelImpl._setOriginalCompanyId = false;

		kolanotInvoiceModelImpl._originalCreatedByAccountId =
			kolanotInvoiceModelImpl._createdByAccountId;

		kolanotInvoiceModelImpl._setOriginalCreatedByAccountId = false;

		kolanotInvoiceModelImpl._originalAccountExternalReferenceCode =
			kolanotInvoiceModelImpl._accountExternalReferenceCode;

		kolanotInvoiceModelImpl._setModifiedDate = false;

		kolanotInvoiceModelImpl._columnBitmask = 0;
	}

	@Override
	public CacheModel<KolanotInvoice> toCacheModel() {
		KolanotInvoiceCacheModel kolanotInvoiceCacheModel =
			new KolanotInvoiceCacheModel();

		kolanotInvoiceCacheModel.uuid = getUuid();

		String uuid = kolanotInvoiceCacheModel.uuid;

		if ((uuid != null) && (uuid.length() == 0)) {
			kolanotInvoiceCacheModel.uuid = null;
		}

		kolanotInvoiceCacheModel.externalReferenceCode =
			getExternalReferenceCode();

		String externalReferenceCode =
			kolanotInvoiceCacheModel.externalReferenceCode;

		if ((externalReferenceCode != null) &&
			(externalReferenceCode.length() == 0)) {

			kolanotInvoiceCacheModel.externalReferenceCode = null;
		}

		kolanotInvoiceCacheModel.invoiceId = getInvoiceId();

		kolanotInvoiceCacheModel.groupId = getGroupId();

		kolanotInvoiceCacheModel.companyId = getCompanyId();

		kolanotInvoiceCacheModel.createdByAccountId = getCreatedByAccountId();

		kolanotInvoiceCacheModel.accountExternalReferenceCode =
			getAccountExternalReferenceCode();

		String accountExternalReferenceCode =
			kolanotInvoiceCacheModel.accountExternalReferenceCode;

		if ((accountExternalReferenceCode != null) &&
			(accountExternalReferenceCode.length() == 0)) {

			kolanotInvoiceCacheModel.accountExternalReferenceCode = null;
		}

		kolanotInvoiceCacheModel.referenceNo = getReferenceNo();

		String referenceNo = kolanotInvoiceCacheModel.referenceNo;

		if ((referenceNo != null) && (referenceNo.length() == 0)) {
			kolanotInvoiceCacheModel.referenceNo = null;
		}

		kolanotInvoiceCacheModel.createdBy = getCreatedBy();

		String createdBy = kolanotInvoiceCacheModel.createdBy;

		if ((createdBy != null) && (createdBy.length() == 0)) {
			kolanotInvoiceCacheModel.createdBy = null;
		}

		Date createDate = getCreateDate();

		if (createDate != null) {
			kolanotInvoiceCacheModel.createDate = createDate.getTime();
		}
		else {
			kolanotInvoiceCacheModel.createDate = Long.MIN_VALUE;
		}

		Date modifiedDate = getModifiedDate();

		if (modifiedDate != null) {
			kolanotInvoiceCacheModel.modifiedDate = modifiedDate.getTime();
		}
		else {
			kolanotInvoiceCacheModel.modifiedDate = Long.MIN_VALUE;
		}

		kolanotInvoiceCacheModel.documentNumber = getDocumentNumber();

		String documentNumber = kolanotInvoiceCacheModel.documentNumber;

		if ((documentNumber != null) && (documentNumber.length() == 0)) {
			kolanotInvoiceCacheModel.documentNumber = null;
		}

		kolanotInvoiceCacheModel.documentStatus = getDocumentStatus();

		String documentStatus = kolanotInvoiceCacheModel.documentStatus;

		if ((documentStatus != null) && (documentStatus.length() == 0)) {
			kolanotInvoiceCacheModel.documentStatus = null;
		}

		Date documentDate = getDocumentDate();

		if (documentDate != null) {
			kolanotInvoiceCacheModel.documentDate = documentDate.getTime();
		}
		else {
			kolanotInvoiceCacheModel.documentDate = Long.MIN_VALUE;
		}

		Date dueDate = getDueDate();

		if (dueDate != null) {
			kolanotInvoiceCacheModel.dueDate = dueDate.getTime();
		}
		else {
			kolanotInvoiceCacheModel.dueDate = Long.MIN_VALUE;
		}

		kolanotInvoiceCacheModel.carrier = getCarrier();

		String carrier = kolanotInvoiceCacheModel.carrier;

		if ((carrier != null) && (carrier.length() == 0)) {
			kolanotInvoiceCacheModel.carrier = null;
		}

		kolanotInvoiceCacheModel.trackingNumber = getTrackingNumber();

		String trackingNumber = kolanotInvoiceCacheModel.trackingNumber;

		if ((trackingNumber != null) && (trackingNumber.length() == 0)) {
			kolanotInvoiceCacheModel.trackingNumber = null;
		}

		kolanotInvoiceCacheModel.subTotal = getSubTotal();

		kolanotInvoiceCacheModel.freightAmount = getFreightAmount();

		kolanotInvoiceCacheModel.gst = getGst();

		kolanotInvoiceCacheModel.invoiceTotal = getInvoiceTotal();

		kolanotInvoiceCacheModel.balanceDue = getBalanceDue();

		kolanotInvoiceCacheModel.trackingURL = getTrackingURL();

		String trackingURL = kolanotInvoiceCacheModel.trackingURL;

		if ((trackingURL != null) && (trackingURL.length() == 0)) {
			kolanotInvoiceCacheModel.trackingURL = null;
		}

		kolanotInvoiceCacheModel.status = getStatus();

		kolanotInvoiceCacheModel.paidSum = getPaidSum();

		kolanotInvoiceCacheModel.fileEntryId = getFileEntryId();

		kolanotInvoiceCacheModel.billingAddressId = getBillingAddressId();

		kolanotInvoiceCacheModel.shippingAddressId = getShippingAddressId();

		return kolanotInvoiceCacheModel;
	}

	@Override
	public String toString() {
		Map<String, Function<KolanotInvoice, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			4 * attributeGetterFunctions.size() + 2);

		sb.append("{");

		for (Map.Entry<String, Function<KolanotInvoice, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<KolanotInvoice, Object> attributeGetterFunction =
				entry.getValue();

			sb.append(attributeName);
			sb.append("=");
			sb.append(attributeGetterFunction.apply((KolanotInvoice)this));
			sb.append(", ");
		}

		if (sb.index() > 1) {
			sb.setIndex(sb.index() - 1);
		}

		sb.append("}");

		return sb.toString();
	}

	@Override
	public String toXmlString() {
		Map<String, Function<KolanotInvoice, Object>> attributeGetterFunctions =
			getAttributeGetterFunctions();

		StringBundler sb = new StringBundler(
			5 * attributeGetterFunctions.size() + 4);

		sb.append("<model><model-name>");
		sb.append(getModelClassName());
		sb.append("</model-name>");

		for (Map.Entry<String, Function<KolanotInvoice, Object>> entry :
				attributeGetterFunctions.entrySet()) {

			String attributeName = entry.getKey();
			Function<KolanotInvoice, Object> attributeGetterFunction =
				entry.getValue();

			sb.append("<column><column-name>");
			sb.append(attributeName);
			sb.append("</column-name><column-value><![CDATA[");
			sb.append(attributeGetterFunction.apply((KolanotInvoice)this));
			sb.append("]]></column-value></column>");
		}

		sb.append("</model>");

		return sb.toString();
	}

	private static class EscapedModelProxyProviderFunctionHolder {

		private static final Function<InvocationHandler, KolanotInvoice>
			_escapedModelProxyProviderFunction = _getProxyProviderFunction();

	}

	private static boolean _entityCacheEnabled;
	private static boolean _finderCacheEnabled;

	private String _uuid;
	private String _originalUuid;
	private String _externalReferenceCode;
	private String _originalExternalReferenceCode;
	private long _invoiceId;
	private long _groupId;
	private long _originalGroupId;
	private boolean _setOriginalGroupId;
	private long _companyId;
	private long _originalCompanyId;
	private boolean _setOriginalCompanyId;
	private long _createdByAccountId;
	private long _originalCreatedByAccountId;
	private boolean _setOriginalCreatedByAccountId;
	private String _accountExternalReferenceCode;
	private String _originalAccountExternalReferenceCode;
	private String _referenceNo;
	private String _createdBy;
	private Date _createDate;
	private Date _modifiedDate;
	private boolean _setModifiedDate;
	private String _documentNumber;
	private String _documentStatus;
	private Date _documentDate;
	private Date _dueDate;
	private String _carrier;
	private String _trackingNumber;
	private BigDecimal _subTotal;
	private BigDecimal _freightAmount;
	private BigDecimal _gst;
	private BigDecimal _invoiceTotal;
	private BigDecimal _balanceDue;
	private String _trackingURL;
	private int _status;
	private BigDecimal _paidSum;
	private long _fileEntryId;
	private long _billingAddressId;
	private long _shippingAddressId;
	private long _columnBitmask;
	private KolanotInvoice _escapedModel;

}